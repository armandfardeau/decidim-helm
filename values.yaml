# Decidim Helm values
# Tree:
# |__ Image:
#   | <Docker image>
# |__ kubernetes-kind:
#   |__ sidekiq | web:
#     | <YAML configuration>

# / Not a Kubernetes kind
# https://kubernetes.io/docs/concepts/
# Image contains information concerning the docker image of the application.
image:
  repository: rg.fr-par.scw.cloud/decidim-sen/decidim-sen
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: latest

nameOverride: false
fullnameOverride: false

# A Deployment provides declarative updates for Pods and ReplicaSets.
# Documentation: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/
deployment:
  web:
    name: "web"
    nameOverride: ""
    fullname: ""
    fullnameOverride: false
    replicasCount: 2
    spec:
      termination:
        gracePeriodSeconds: 120
      containers:
        port: 3000
        resources: { }
          # We usually recommend not to specify default resources and to leave this as a conscious
          # choice for the user. This also increases chances charts run on environments with little
          # resources, such as Minikube. If you do want to specify resources, uncomment the following
          # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
          # limits:
          #   cpu: 100m
          #   memory: 128Mi
          # requests:
        #   cpu: 100m
        #   memory: 128Mi
        securityContext: { }
          # capabilities:
          #   drop:
          #   - ALL
          # readOnlyRootFilesystem: true
        # runAsNonRoot: true
        # runAsUser: 1000
        startupProbe:
          path: ""
          initialDelaySeconds: 30
          failureThreshold: 30
          periodSeconds: 10
      imagePullSecrets: [ ]
      podAnnotations: { }
      podSecurityContext: { }
      nodeSelector: { }
      tolerations: [ ]
  sidekiq:
    name: "sidekiq"
    nameOverride: ""
    fullname: ""
    fullnameOverride: false
    replicasCount: 2
    spec:
      podAnnotations: { }
      containers:
        resources: { }
        livenessProbe:
          enabled: true
          initialDelaySeconds: 60
          timeoutSeconds: 30
        readinessProbe:
          enabled: true
          initialDelaySeconds: 60
          timeoutSeconds: 30
      termination:
        gracePeriodSeconds: 120

# A HorizontalPodAutoscaler automatically updates a workload resource (such as a Deployment or StatefulSet), with the aim of automatically scaling the workload to match demand.
# Documentation: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
hpa:
  sidekiq:
    enabled: true
    minReplicas: 2
    maxReplicas: 100
    targetCPUUtilizationPercentage: 70
    stabilizationWindowSeconds: 30
    targetMemoryUtilizationPercentage: ""
  web:
    enabled: true
    minReplicas: 6
    maxReplicas: 100
    targetCPUUtilizationPercentage: 70
    stabilizationWindowSeconds: 30
    targetMemoryUtilizationPercentage: ""

# An abstract way to expose an application running on a set of Pods as a network service.
# Documentation: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  type: LoadBalancer
  port: 80
  targetPort: 3000

# An API object that manages external access to the services in a cluster, typically HTTP.
# Ingress may provide load balancing, SSL termination and name-based virtual hosting.
# Documentation: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: true
  className: ""
  annotations:
    kubernetes.io/ingress.class: "nginx"
    kubernetes.io/tls-acme: "true"
    cert-manager.io/issuer: letsencrypt-prod
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: Prefix
  tls:
    - hosts:
        -  chart-example.local
      secretName: decidim-sen-ingress-secret

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: { }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

migrateJob:
  ttlSecondsAfterFinished: 120
  command: ["bundle",  "exec", "rails", "db:migrate"]

database_url: "host.example.org"

redis-cluster:
  auth:
   enabled: false
  cluster:
    slaveCount: 3
  securityContext:
    enabled: true
    fsGroup: 2000
    runAsUser: 1000
  volumePermissions:
    enabled: true
    persistence:
      enabled: true
      path: /data
      size: 8Gi
  master:
    persistence:
      storageClass: "scw-bssd-retain"
  slave:
    persistence:
      enabled: true
      path: /data
      size: 8Gi
      storageClass: "scw-bssd-retain"